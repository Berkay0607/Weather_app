{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berka\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\programlar\\\\yazilim\\\\proje_rastgele\\\\hava_durumu\\\\frontend\\\\src\\\\pages\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport \"./MainPage.css\"; // CSS dosyasını import ediyoruz\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [city, setCity] = useState(\"\"); // Kullanıcının girdiği şehir adı\n  const [weatherData, setWeatherData] = useState(null); // Hava durumu verisi\n  const [temperature, setTemperature] = useState(null); // Sıcaklık verisi\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Hata mesajı\n  const navigate = useNavigate(); // Kullanıcıyı yönlendirmek için\n  const {\n    city: urlCity\n  } = useParams(); // URL parametrelerinden şehir adı\n\n  // Hava durumu ve sıcaklık verilerini çeken fonksiyon\n  const getWeatherData = async cityName => {\n    try {\n      const weatherResponse = await fetch(`https://wttr.in/${cityName}?format=%C`);\n      if (weatherResponse.status === 404 || !weatherResponse.ok) {\n        throw new Error(\"Şehir bulunamadı. Lütfen geçerli bir şehir adı girin.\");\n      }\n      const weatherData = await weatherResponse.text();\n      setWeatherData(weatherData);\n\n      // Sıcaklık verisini almak için\n      const tempResponse = await fetch(`https://wttr.in/${cityName}?format=%t`);\n      const tempData = await tempResponse.text();\n      setTemperature(tempData);\n      setErrorMessage(\"\"); // Eğer her şey doğruysa, hata mesajını temizle\n    } catch (error) {\n      setWeatherData(null);\n      setTemperature(null);\n      setErrorMessage(error.message); // Hata durumunda, hata mesajını ayarla\n    }\n  };\n\n  // URL parametresinde şehir adı varsa, bu değeri al ve güncelle\n  useEffect(() => {\n    if (urlCity) {\n      setCity(urlCity); // URL parametresindeki şehir ismini state'e atıyoruz\n      getWeatherData(urlCity); // Şehir ismiyle hava durumu verisini al\n    }\n  }, [urlCity]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (city) {\n      navigate(`/${city}`); // Şehri URL'ye ekleyerek yeni bir rota oluştur\n      getWeatherData(city); // Yeni şehir için verileri getir\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Hava Durumu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u015Eehir ad\\u0131 girin...\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Ara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-data\",\n        children: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), temperature && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: [\"S\\u0131cakl\\u0131k: \", temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"VVh5O6DkBgy68tT+ESn9y31+rCc=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","MainPage","_s","city","setCity","weatherData","setWeatherData","temperature","setTemperature","errorMessage","setErrorMessage","navigate","urlCity","getWeatherData","cityName","weatherResponse","fetch","status","ok","Error","text","tempResponse","tempData","error","message","handleSubmit","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/berka/OneDrive/Masaüstü/programlar/yazilim/proje_rastgele/hava_durumu/frontend/src/pages/MainPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./MainPage.css\"; // CSS dosyasını import ediyoruz\r\n\r\nconst MainPage = () => {\r\n  const [city, setCity] = useState(\"\"); // Kullanıcının girdiği şehir adı\r\n  const [weatherData, setWeatherData] = useState(null); // Hava durumu verisi\r\n  const [temperature, setTemperature] = useState(null); // Sıcaklık verisi\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Hata mesajı\r\n  const navigate = useNavigate(); // Kullanıcıyı yönlendirmek için\r\n  const { city: urlCity } = useParams(); // URL parametrelerinden şehir adı\r\n\r\n  // Hava durumu ve sıcaklık verilerini çeken fonksiyon\r\n  const getWeatherData = async (cityName) => {\r\n    try {\r\n      const weatherResponse = await fetch(`https://wttr.in/${cityName}?format=%C`);\r\n      \r\n      if (weatherResponse.status === 404 || !weatherResponse.ok) {\r\n        throw new Error(\"Şehir bulunamadı. Lütfen geçerli bir şehir adı girin.\");\r\n      }\r\n\r\n      const weatherData = await weatherResponse.text();\r\n      setWeatherData(weatherData);\r\n\r\n      // Sıcaklık verisini almak için\r\n      const tempResponse = await fetch(`https://wttr.in/${cityName}?format=%t`);\r\n      const tempData = await tempResponse.text();\r\n      setTemperature(tempData);\r\n\r\n      setErrorMessage(\"\"); // Eğer her şey doğruysa, hata mesajını temizle\r\n    } catch (error) {\r\n      setWeatherData(null);\r\n      setTemperature(null);\r\n      setErrorMessage(error.message); // Hata durumunda, hata mesajını ayarla\r\n    }\r\n  };\r\n\r\n  // URL parametresinde şehir adı varsa, bu değeri al ve güncelle\r\n  useEffect(() => {\r\n    if (urlCity) {\r\n      setCity(urlCity); // URL parametresindeki şehir ismini state'e atıyoruz\r\n      getWeatherData(urlCity); // Şehir ismiyle hava durumu verisini al\r\n    }\r\n  }, [urlCity]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (city) {\r\n      navigate(`/${city}`); // Şehri URL'ye ekleyerek yeni bir rota oluştur\r\n      getWeatherData(city); // Yeni şehir için verileri getir\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Hava Durumu</h1>\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Şehir adı girin...\"\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          className=\"input\"\r\n        />\r\n        <button type=\"submit\" className=\"button\">\r\n          Ara\r\n        </button>\r\n      </form>\r\n\r\n      {/* Hata mesajını göster */}\r\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n      {/* Hava durumu ve sıcaklık bilgisi */}\r\n      {weatherData && (\r\n        <div className=\"weather-info\">\r\n          <div className=\"weather-data\">{weatherData}</div>\r\n          {temperature && <div className=\"temperature\">Sıcaklık: {temperature}°C</div>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}